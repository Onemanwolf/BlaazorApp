@page "/todo"
@using Microsoft.Fast.Components.FluentUI
@inject IDataAccess DataAccessService

<PageTitle>Todo</PageTitle>

<style>
    fluent-card {
        --card-width: 500px;
        --card-height: auto;
    }

    .card-padding {
        padding: 20px;
    }
</style>
<h1>Todo (@todos.Count(todo => !todo.IsDone))</h1>

<FluentCard class="card-padding">

    <ul>
    @foreach (var todo in todos)
    {
        <li>
            <FluentCheckbox @bind-Value="todo.IsDone"></FluentCheckbox>
            <FluentTextField @bind-Value="todo.Title" ></FluentTextField>
            @* <input type="checkbox" @bind="todo.IsDone" /> *@

            @* <input @bind="todo.Title" /> *@
        </li>
    }
</ul>

<div>

<FluentTextField placeholder="Add todo" @bind-Value="newTodo" ></FluentTextField>
 </div>
 <div class="btnsytle">
 @* <button @onclick="AddTodo">Add</button> *@
  <FluentButton @onclick="() => AddTodo()">Add</FluentButton>
  </div>
</FluentCard>






@code {
    private string? newTodo;
    private List<TodoItem> todos = new ();

    private async Task AddTodo()
    {
        var todo = new TodoItem { Title = newTodo };



        await DataAccessService.PostAsync(todo);
        todos = await DataAccessService.GetAsync();
        newTodo = string.Empty;
    }
}